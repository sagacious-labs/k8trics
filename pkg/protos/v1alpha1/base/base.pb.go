// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: v1alpha1/base/base.proto

package base

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Module struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Core     *ModuleCore     `protobuf:"bytes,1,opt,name=core,proto3" json:"core,omitempty"`
	Metadata *ModuleMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Uid      string          `protobuf:"bytes,3,opt,name=uid,proto3" json:"uid,omitempty"`
	Spec     *ModuleSpec     `protobuf:"bytes,4,opt,name=spec,proto3" json:"spec,omitempty"`
	Status   *ModuleStatus   `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *Module) Reset() {
	*x = Module{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1alpha1_base_base_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Module) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Module) ProtoMessage() {}

func (x *Module) ProtoReflect() protoreflect.Message {
	mi := &file_v1alpha1_base_base_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Module.ProtoReflect.Descriptor instead.
func (*Module) Descriptor() ([]byte, []int) {
	return file_v1alpha1_base_base_proto_rawDescGZIP(), []int{0}
}

func (x *Module) GetCore() *ModuleCore {
	if x != nil {
		return x.Core
	}
	return nil
}

func (x *Module) GetMetadata() *ModuleMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Module) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *Module) GetSpec() *ModuleSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *Module) GetStatus() *ModuleStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type ModuleCore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ModuleCore) Reset() {
	*x = ModuleCore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1alpha1_base_base_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleCore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleCore) ProtoMessage() {}

func (x *ModuleCore) ProtoReflect() protoreflect.Message {
	mi := &file_v1alpha1_base_base_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleCore.ProtoReflect.Descriptor instead.
func (*ModuleCore) Descriptor() ([]byte, []int) {
	return file_v1alpha1_base_base_proto_rawDescGZIP(), []int{1}
}

func (x *ModuleCore) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ModuleMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Labels map[string]string `protobuf:"bytes,1,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Types that are assignable to Release:
	//	*ModuleMetadata_LinuxAMD64
	//	*ModuleMetadata_LinuxARM64
	Release isModuleMetadata_Release `protobuf_oneof:"release"`
}

func (x *ModuleMetadata) Reset() {
	*x = ModuleMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1alpha1_base_base_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleMetadata) ProtoMessage() {}

func (x *ModuleMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_v1alpha1_base_base_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleMetadata.ProtoReflect.Descriptor instead.
func (*ModuleMetadata) Descriptor() ([]byte, []int) {
	return file_v1alpha1_base_base_proto_rawDescGZIP(), []int{2}
}

func (x *ModuleMetadata) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (m *ModuleMetadata) GetRelease() isModuleMetadata_Release {
	if m != nil {
		return m.Release
	}
	return nil
}

func (x *ModuleMetadata) GetLinuxAMD64() *ModuleMetadataModuleRelease {
	if x, ok := x.GetRelease().(*ModuleMetadata_LinuxAMD64); ok {
		return x.LinuxAMD64
	}
	return nil
}

func (x *ModuleMetadata) GetLinuxARM64() *ModuleMetadataModuleRelease {
	if x, ok := x.GetRelease().(*ModuleMetadata_LinuxARM64); ok {
		return x.LinuxARM64
	}
	return nil
}

type isModuleMetadata_Release interface {
	isModuleMetadata_Release()
}

type ModuleMetadata_LinuxAMD64 struct {
	LinuxAMD64 *ModuleMetadataModuleRelease `protobuf:"bytes,2,opt,name=linuxAMD64,proto3,oneof"`
}

type ModuleMetadata_LinuxARM64 struct {
	LinuxARM64 *ModuleMetadataModuleRelease `protobuf:"bytes,3,opt,name=linuxARM64,proto3,oneof"`
}

func (*ModuleMetadata_LinuxAMD64) isModuleMetadata_Release() {}

func (*ModuleMetadata_LinuxARM64) isModuleMetadata_Release() {}

type ModuleSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	// Types that are assignable to DataSource:
	//	*ModuleSpec_Label
	//	*ModuleSpec_Core
	DataSource isModuleSpec_DataSource `protobuf_oneof:"dataSource"`
}

func (x *ModuleSpec) Reset() {
	*x = ModuleSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1alpha1_base_base_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleSpec) ProtoMessage() {}

func (x *ModuleSpec) ProtoReflect() protoreflect.Message {
	mi := &file_v1alpha1_base_base_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleSpec.ProtoReflect.Descriptor instead.
func (*ModuleSpec) Descriptor() ([]byte, []int) {
	return file_v1alpha1_base_base_proto_rawDescGZIP(), []int{3}
}

func (x *ModuleSpec) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (m *ModuleSpec) GetDataSource() isModuleSpec_DataSource {
	if m != nil {
		return m.DataSource
	}
	return nil
}

func (x *ModuleSpec) GetLabel() *LabelSelector {
	if x, ok := x.GetDataSource().(*ModuleSpec_Label); ok {
		return x.Label
	}
	return nil
}

func (x *ModuleSpec) GetCore() *ModuleCore {
	if x, ok := x.GetDataSource().(*ModuleSpec_Core); ok {
		return x.Core
	}
	return nil
}

type isModuleSpec_DataSource interface {
	isModuleSpec_DataSource()
}

type ModuleSpec_Label struct {
	Label *LabelSelector `protobuf:"bytes,2,opt,name=label,proto3,oneof"`
}

type ModuleSpec_Core struct {
	Core *ModuleCore `protobuf:"bytes,3,opt,name=core,proto3,oneof"`
}

func (*ModuleSpec_Label) isModuleSpec_DataSource() {}

func (*ModuleSpec_Core) isModuleSpec_DataSource() {}

type ModuleStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ModuleStatus) Reset() {
	*x = ModuleStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1alpha1_base_base_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleStatus) ProtoMessage() {}

func (x *ModuleStatus) ProtoReflect() protoreflect.Message {
	mi := &file_v1alpha1_base_base_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleStatus.ProtoReflect.Descriptor instead.
func (*ModuleStatus) Descriptor() ([]byte, []int) {
	return file_v1alpha1_base_base_proto_rawDescGZIP(), []int{4}
}

func (x *ModuleStatus) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type LabelSelector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Selector map[string]string `protobuf:"bytes,1,rep,name=selector,proto3" json:"selector,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *LabelSelector) Reset() {
	*x = LabelSelector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1alpha1_base_base_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LabelSelector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelSelector) ProtoMessage() {}

func (x *LabelSelector) ProtoReflect() protoreflect.Message {
	mi := &file_v1alpha1_base_base_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelSelector.ProtoReflect.Descriptor instead.
func (*LabelSelector) Descriptor() ([]byte, []int) {
	return file_v1alpha1_base_base_proto_rawDescGZIP(), []int{5}
}

func (x *LabelSelector) GetSelector() map[string]string {
	if x != nil {
		return x.Selector
	}
	return nil
}

type ModuleMetadataModuleRelease struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location string `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	Sha256   string `protobuf:"bytes,2,opt,name=sha256,proto3" json:"sha256,omitempty"`
}

func (x *ModuleMetadataModuleRelease) Reset() {
	*x = ModuleMetadataModuleRelease{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1alpha1_base_base_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleMetadataModuleRelease) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleMetadataModuleRelease) ProtoMessage() {}

func (x *ModuleMetadataModuleRelease) ProtoReflect() protoreflect.Message {
	mi := &file_v1alpha1_base_base_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleMetadataModuleRelease.ProtoReflect.Descriptor instead.
func (*ModuleMetadataModuleRelease) Descriptor() ([]byte, []int) {
	return file_v1alpha1_base_base_proto_rawDescGZIP(), []int{2, 0}
}

func (x *ModuleMetadataModuleRelease) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *ModuleMetadataModuleRelease) GetSha256() string {
	if x != nil {
		return x.Sha256
	}
	return ""
}

var File_v1alpha1_base_base_proto protoreflect.FileDescriptor

var file_v1alpha1_base_base_proto_rawDesc = []byte{
	0x0a, 0x18, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2f,
	0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x68, 0x79, 0x70, 0x65,
	0x72, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x62, 0x61,
	0x73, 0x65, 0x22, 0x8c, 0x02, 0x0a, 0x06, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x36, 0x0a,
	0x04, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x68, 0x79,
	0x70, 0x65, 0x72, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x62, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x52,
	0x04, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x42, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x68, 0x79, 0x70, 0x65, 0x72, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x36, 0x0a, 0x04, 0x73,
	0x70, 0x65, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x68, 0x79, 0x70, 0x65,
	0x72, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x62, 0x61,
	0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73,
	0x70, 0x65, 0x63, 0x12, 0x3c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x68, 0x79, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x20, 0x0a, 0x0a, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x97, 0x03, 0x0a, 0x0e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x4a, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x68, 0x79, 0x70, 0x65, 0x72, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x12, 0x56, 0x0a, 0x0a, 0x6c, 0x69, 0x6e, 0x75, 0x78, 0x41, 0x4d, 0x44, 0x36, 0x34,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x68, 0x79, 0x70, 0x65, 0x72, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0a,
	0x6c, 0x69, 0x6e, 0x75, 0x78, 0x41, 0x4d, 0x44, 0x36, 0x34, 0x12, 0x56, 0x0a, 0x0a, 0x6c, 0x69,
	0x6e, 0x75, 0x78, 0x41, 0x52, 0x4d, 0x36, 0x34, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34,
	0x2e, 0x68, 0x79, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x6c, 0x69, 0x6e, 0x75, 0x78, 0x41, 0x52, 0x4d,
	0x36, 0x34, 0x1a, 0x43, 0x0a, 0x0d, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x22, 0xa7, 0x01,
	0x0a, 0x0a, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x3d, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x68, 0x79, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12,
	0x38, 0x0a, 0x04, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x68, 0x79, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x72,
	0x65, 0x48, 0x00, 0x52, 0x04, 0x63, 0x6f, 0x72, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x64, 0x61, 0x74,
	0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x20, 0x0a, 0x0c, 0x4d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x9d, 0x01, 0x0a, 0x0d, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x4f, 0x0a, 0x08, 0x73,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e,
	0x68, 0x79, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x1a, 0x3b, 0x0a, 0x0d,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x3c, 0x5a, 0x3a, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x61, 0x67, 0x61, 0x63, 0x69, 0x6f, 0x75,
	0x73, 0x2d, 0x6c, 0x61, 0x62, 0x73, 0x2f, 0x6b, 0x38, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2f, 0x70,
	0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1alpha1_base_base_proto_rawDescOnce sync.Once
	file_v1alpha1_base_base_proto_rawDescData = file_v1alpha1_base_base_proto_rawDesc
)

func file_v1alpha1_base_base_proto_rawDescGZIP() []byte {
	file_v1alpha1_base_base_proto_rawDescOnce.Do(func() {
		file_v1alpha1_base_base_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1alpha1_base_base_proto_rawDescData)
	})
	return file_v1alpha1_base_base_proto_rawDescData
}

var file_v1alpha1_base_base_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_v1alpha1_base_base_proto_goTypes = []interface{}{
	(*Module)(nil),                      // 0: hyperion.v1alpha1.base.Module
	(*ModuleCore)(nil),                  // 1: hyperion.v1alpha1.base.ModuleCore
	(*ModuleMetadata)(nil),              // 2: hyperion.v1alpha1.base.ModuleMetadata
	(*ModuleSpec)(nil),                  // 3: hyperion.v1alpha1.base.ModuleSpec
	(*ModuleStatus)(nil),                // 4: hyperion.v1alpha1.base.ModuleStatus
	(*LabelSelector)(nil),               // 5: hyperion.v1alpha1.base.LabelSelector
	(*ModuleMetadataModuleRelease)(nil), // 6: hyperion.v1alpha1.base.ModuleMetadata.moduleRelease
	nil,                                 // 7: hyperion.v1alpha1.base.ModuleMetadata.LabelsEntry
	nil,                                 // 8: hyperion.v1alpha1.base.LabelSelector.SelectorEntry
}
var file_v1alpha1_base_base_proto_depIdxs = []int32{
	1,  // 0: hyperion.v1alpha1.base.Module.core:type_name -> hyperion.v1alpha1.base.ModuleCore
	2,  // 1: hyperion.v1alpha1.base.Module.metadata:type_name -> hyperion.v1alpha1.base.ModuleMetadata
	3,  // 2: hyperion.v1alpha1.base.Module.spec:type_name -> hyperion.v1alpha1.base.ModuleSpec
	4,  // 3: hyperion.v1alpha1.base.Module.status:type_name -> hyperion.v1alpha1.base.ModuleStatus
	7,  // 4: hyperion.v1alpha1.base.ModuleMetadata.labels:type_name -> hyperion.v1alpha1.base.ModuleMetadata.LabelsEntry
	6,  // 5: hyperion.v1alpha1.base.ModuleMetadata.linuxAMD64:type_name -> hyperion.v1alpha1.base.ModuleMetadata.moduleRelease
	6,  // 6: hyperion.v1alpha1.base.ModuleMetadata.linuxARM64:type_name -> hyperion.v1alpha1.base.ModuleMetadata.moduleRelease
	5,  // 7: hyperion.v1alpha1.base.ModuleSpec.label:type_name -> hyperion.v1alpha1.base.LabelSelector
	1,  // 8: hyperion.v1alpha1.base.ModuleSpec.core:type_name -> hyperion.v1alpha1.base.ModuleCore
	8,  // 9: hyperion.v1alpha1.base.LabelSelector.selector:type_name -> hyperion.v1alpha1.base.LabelSelector.SelectorEntry
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_v1alpha1_base_base_proto_init() }
func file_v1alpha1_base_base_proto_init() {
	if File_v1alpha1_base_base_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v1alpha1_base_base_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Module); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1alpha1_base_base_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleCore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1alpha1_base_base_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1alpha1_base_base_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1alpha1_base_base_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1alpha1_base_base_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LabelSelector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1alpha1_base_base_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleMetadataModuleRelease); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_v1alpha1_base_base_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*ModuleMetadata_LinuxAMD64)(nil),
		(*ModuleMetadata_LinuxARM64)(nil),
	}
	file_v1alpha1_base_base_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*ModuleSpec_Label)(nil),
		(*ModuleSpec_Core)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1alpha1_base_base_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_v1alpha1_base_base_proto_goTypes,
		DependencyIndexes: file_v1alpha1_base_base_proto_depIdxs,
		MessageInfos:      file_v1alpha1_base_base_proto_msgTypes,
	}.Build()
	File_v1alpha1_base_base_proto = out.File
	file_v1alpha1_base_base_proto_rawDesc = nil
	file_v1alpha1_base_base_proto_goTypes = nil
	file_v1alpha1_base_base_proto_depIdxs = nil
}
